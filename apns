//************************ SEND MESAGE*****************************//
function sendApnsMessage($device_token=null,$msg){
$this->checkApiCall(); 		
$res=array();
// Put your device token here (without spaces):
$deviceToken = $device_token;
//$deviceToken = 'b9e2d587a704b6f474a8375df6fffeac6e4b90c0bfdbb7a882c2e225bb68224d';
// Put your private key's passphrase here:
$passphrase = 'Request Line';
// Put your alert message here:
$message =$msg;
$ctx = stream_context_create();
stream_context_set_option($ctx, 'ssl', 'local_cert', 'ck.pem');
stream_context_set_option($ctx, 'ssl', 'passphrase', $passphrase);
// Open a connection to the APNS server
$fp = stream_socket_client(
    'ssl://gateway.sandbox.push.apple.com:2195', $err,
    $errstr, 60, STREAM_CLIENT_CONNECT|STREAM_CLIENT_PERSISTENT, $ctx);
if (!$fp)
    exit("Failed to connect: $err $errstr" . PHP_EOL);
echo 'Connected to APNS' . PHP_EOL;
// Create the payload body
$body['aps'] = array(
    'alert' => $message,
    'sound' => 'default'
    );
// Encode the payload as JSON
$payload = json_encode($body);
// Build the binary notification
$msg = chr(0) . pack('n', 32) . pack('H*', $deviceToken) . pack('n', strlen($payload)) . $payload;
// Send it to the server
$result = fwrite($fp, $msg, strlen($msg));
if (!$result){
    $res['msg']='Message not delivered';
    $res['status']=FALSE;
}else{
    $res['msg']='Message successfully delivered';
    $res['status']=TRUE;
   } 
// Close the connection to the server
fclose($fp);
$this->response_api($res);	
}	
//***************************** Save  deviceToken to Artist Account********************//
